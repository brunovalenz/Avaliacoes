<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>22, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA5A0AAAJNU0Z0AUkBTAIBAQMB
        AAFgAQABYAEAARgBAAEYAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABYAMAARgDAAEBAQABIAYAASR6
        AANDAXcDVwG5A1cBuQNXAbkDVwG5A1cBuQNXAbkDVwG5A1cBuQNXAbkDVwG5A1cBuQNXAbkDVwG5A1cB
        uQNPAZkYAAMFAQYDAAH/AwAB/wMAAf8DHAEn/wARAANUAeoDUAGfAx0BKQMdASkDHQEpAx0BKQMdASkD
        HQEpAx0BKQMdASkDHQEpAx0BKQMdASkDHQEpAx0BKQMdASkDOgFhAwAB/xQAA18B1QMMAf4EAANeAdcD
        AAH/AxwBJ8gAAw8BFANVAbEDGQEjBAADFgEeA1MBpwNSAe0DJQE3JwAB/ycAAf8DWAHrAzsBYxAAA1kB
        wAMdASkQAANZAeQDNgH3CAADXgHXAwAB/wMdASjAAAQCA1UBtANSAaMEAQMtAUQDXwHVAz8BbgMZASMr
        AAH/JAADXQHgAxwBJwNNAZMDAAH/AzMB9ggAA1UBrwMkATQQAAMSARgDAAH/A1wB1ggAA14B1wMAAf8D
        HAEnvAADOQFfA10B3QMMARADOgFgA1wB4gMTARoEAgM4BFsBxQNIAfIDXAHIAzMBURsAAf8kAAM0AVMD
        UQGkAzkBXgMgAfoDQAFxAzYB9wQAA1UBrwMkATQUAAMdASgDAAH/A1wB1ggAA14B1wMAAf8DHAEnrAAD
        RAF4AzkBXwQAA14B0gMwAUoDFAEbA0QB8wMgAS0DDgESA1kBwANXAbwDMAFKAwwEEAEVAxIBGBsAAf8r
        AAH/AyAB+ggAA0ABcQMzAfYDVQGvAyQBNBgAAx0BKAMAAf8DXAHWCAADXgHXAwAB/wMdASioAANZAcYD
        HQEpAyMBMwNdAeAEAQNKAYkDSQGGBAADUQGhA04BlwQBAw8BEwM5AV4DRgF/AzQBUxsAAf8HAAH/AwAB
        /wMAAf8DTgGYAwsBDgM/AW4DPwFuAz8BbgQAA1AB7gNKAYkMAANAAXEDAAH/AyQBNBwAAx0BKAMAAf8D
        XAHWCAADXgHXAwAB/wMcASegAAMGAQgDVQHpBAADQgF0A0wBjgQAA10B4AMcAScDGwElA1wB2QQCAyUB
        NwNXAegDSQGHA1ABnQNMAe8DRgGBFwAB/wQAA0QB8wQAAyoBQANRAaEDDAEQA0MBdgNDAXYDQwF2CAAD
        UAHuA0oBiQwAA0ABcQMzAfYgAAMdASgDAAH/A14B1wgAA14B1wMAAf8DHAEnBAAEAQM+AWoDVQGtA1UB
        rwNDAXYDBgEHgAADGwEmA10ByQQAA00BkgM/AW0DBAEFA0QB8wQAA0IBdQNKAYoEAANZAcEDMAFKAwIB
        AwMPARMDFQEdAyYB+QMMAQ8TAAH/BAADRAHzBAADKgFAA1EBoQMZASIDUwGmA1MBpgNTAaYDUwGmAz8B
        bAQAA1AB7gNKAYkMAANAAXEDMwH2IAADHQEoAwAB/wNeAdcIAANeAdcDAAH/AzIB+AMAAf8DAAH/AwAB
        /wMAAf8DAAH/AwAB/wMMAf4DGwEleAADIQEwA1oBxwQAA1ABnwM8AWYDCQEMAz8B9AQAAzMBUAMoATsD
        BAEFAz8B9AMEAQUDNgFXA1ABnAQAA14B0gMeASsTAAH/BwAB/wMAAf8DAAH/A0sBjAMCAQMDKQE+AykB
        PgMpAT4DKQE+AxQBGwgAA1AB7gNKAYkMAANAAXEDMwH2IAADHQEoAwAB/wNcAdYEAAM3AVoDAAH/AyAB
        +gMYASEQAAMLAQ4DVAHqAwAB/wNOAZR0AAMTARoDXQHcBAADQgF0A08BmQQAA1oBxwM9AWgEAQMDAQQD
        TgGYA1oBvwQAA0kBhwNHAYMEAANYAesDEAEVEwAB/zgAA1AB7gNKAYkIAAQBAwAB/wM2AfcgAAMdASgD
        AAH/A10B3QMAAf8DUwGnIAADPgFrAwAB/wNEAXh0AANcAd8DEAEVAxIBGANYAesDEQEWAxIBFwNbAcoD
        WQHkA1QB6gNfAdUDHQEpAw8BFANYAesDHgErAyEBMANcAd8XAAH/BAADSgHxA0oB8QNKAfEDPQFpKAAD
        UAHuA0oBiQQBAwAB/wMfASwDTgGWA0UBfCAAAx0BKAMAAf8DWwHNKAADTAGOAwAB/wMCAQNwAANGAYED
        RwGDBAADQQFyA1kBvgMMARAEAQMdASkDGQEjBAADDwETA1wB2QNIAYQEAANWAbYDSAGEFwAB/wQAA0QB
        8wQAAyoBQANRAaEDKQE+A1wB5QNcAeUDXAHlAwQBBRgAA0wB7wMAAf8DHwEsBAADKQE+A1UBrCAAA0kB
        hgMAAf8zAAH/A1wBy3AAAwcBCQNfAdoDHgEqBAADQAFvA1wB4gNEAXgDMwFQAzoBYgNUAasDWAHrA0oB
        igMDAQQDRAF5A1kB5AMIAQoXAAH/BAADRAHzBAADKgFAA1EBoQQBAyYBOAMmATgDJgE4AyYBOAMRARYU
        AANVAa8DGAH8A1UBrAMzAVADAAH/AwsBDiMAAf8DWQHBMAADRAF7AwAB/2wAA1EBpAMLAQ4DKAE8A14B
        0gMhAS8EAAMVARwDPwFsA1IBpQNZAcADTgGVAxUBHQQAAz8BbAMmAfkDIwEyAw0BEQNBAXMTAAH/BwAB
        /wMAAf8DAAH/A1IBoAMbASUDVQGsA1UBrANVAawDVQGsA0EBchQAA1UBrwMlATYDPQFpA1IBoAMKAQ0n
        AAH/Ay4BSDAAAwUBBgMAAf9sAAM7AWUDWQHBAwQBBQMSARgDVgGzA00BkgMaASQMAAMKAQ0DPQFnA1sB
        ygNQAe4DKgE/AwUBBgNaAccDOwFlEwAB/0AAA1UBrwMlATYzAAH/AxUBHTcAAf9wAANCAXQDWAG4AxIB
        FwQAAyYBOANVAa4DWwHeA1sBygNeAdcDJgH5A14B2wNNAZMDDwQTARoDVwG5A0ABcRcAAf8EAANJAYYD
        SQGGA0kBhgMdASgsAANVAa8DJQE2MwAB/wMpAT4wAAQBAwAB/3QAAy0BRgNeAdsDQAFxAxIBGAgAAx4B
        KgMeASsDBAEFBAADEwEaA0IBdQNbAdgDKwFBGwAB/wQAAzYB9wM5AV4DSQGGA1EBoQM9AWgDAAH/AwAB
        /wMAAf8DCQEMDAADRgGBA1IBowNSAaMDXAHiAyUBNjMAAf8DVAGrMAADOwFlAwAB/3gAAxEBFgNHAYMD
        WgHnA1wByANTAacDSgGLA0sBjQNTAacDWwHKA1kB5ANGAYEDEAEVHwAB/wQAA0QB8wQAAyoBQANRAaEf
        AAH/A0UBfAMqAUADSwGMAwwB/jQAA1EBogMAAf8IAANZAcEDWwHjEAADUAGdAwwB/ggAAwwB/gNZAeR0
        AAMPARQDPwFtAwsBDgMCAQMDKgFAAzgBWwNCAXQDQQFzAzgBWwMqAT8DAgEDAwYBCAM+AWoDEwEZGwAB
        /wQAAxgB/QNeAdcDXgHhA1EBoQM2AVcDAAH/AwAB/wMAAf8DAAH/A1sB0AMVAR0DWwHQBAADMAFMAwwB
        /j8AAf8DUgGgBAADFAEbAwAB/wMAAf8DSAHyA1kB5AMAAf8DAAH/AzoBYgQAAzcBWgMAAf8DDAEPdAAD
        FAEbA1wBywNIAfIDSgGLAyYBOAMYASEDCQELAw4BEgMrBEEBcwNQAZ8DXAHlA1oBxwMUARsbAAH/BAAD
        CwEOAwsBDgMLAQ4cAAMeASoDWQG7AzABTAMMAf5AAAM9AWkDAAH/AzsBYwgAA0IBdANaAeYDSgHxA04B
        lwQBBAADIwEyAwAB/wNVAa2AAAMtAUUDUgGjA1wB2QMYAfwDAAH/AwAB/wMYAfwDXgHXA1ABnAMpAT0j
        AAH/LAADHgEqA1oB5wMMAf5IAANPAZsDAAH/A14B1wQBFAADVgGzAwAB/wNbAc3MAAMmATgDAAH/AwAB
        /wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DGAH9UAADJgE4AwAB/wMAAf8D
        AAH/A14B4QNdAd0DAAH/AwAB/wMAAf8DOgFi/wBhAAMeASoDVQGvA0oB8QM/AfQDVwG8AyoBQHQAAUIB
        TQE+BwABPgMAASgDAAFgAwABGAMAAQEBAAEBBQABIAEBFgAD/wEAA/8BwAEAAT8BBwL/AwAD/wGAAQAB
        HwEjAv8DAAH/ARAB/wG/AeMBzwExAv8DAAH+AQEB/wG/AeABzwEYAv8DAAH+AQABHwG/AeABTwGMAX8B
        /wMAAfIBAAEfAb8B8wEPAcYBPwH/AwAB8AEQAR8BoAETAY8B4wEfAf8DAAHkAYABDwGoARkBzwHxAYgB
        HwMAAeQBJAEHAagBBAHnAfgBwAEHAwAB5AEgAScBoAEGAXMB/AFDAcMDAAHkAYEBJwG/Af8BMQH+AQ8B
        8QMAAfABAAEPAaEB/wGAAf8BHwH4AwAB8gEEAU8BqAEPAcQB/wE/AfwDAAHxAQABDwGoAQcBwAH/AT8B
        /AMAAeABgQEHAaABBwHBAf8BPwH8AwAB4AE4AQcBvwH/Ac8B/wE/Af4DAAHxAQABDwGhAf8BzwH/AT8B
        /AMAAfgBYgEfAaABDgEPAf8BPwH8AwAB/AEAAT8BqQH8AR8B/wEzAcwDAAH4AQABHwGgAQEBPwH/AZAB
        CAMAAfgBAAEfAaMB+AF/Af8BjAERAwAB/gEAAX8BvwH4Av8BwwHjAwAD/wGAAQEC/wHgAQcDAAf/AfgB
        HwMACw==
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>83</value>
  </metadata>
</root>